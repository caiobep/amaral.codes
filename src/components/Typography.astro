---
export interface Props {
  variant?:
    | "h1"
    | "h2"
    | "h3"
    | "h4"
    | "h5"
    | "h6"
    | "subtitle1"
    | "subtitle2"
    | "body1"
    | "body2"
    | "caption";
  color?: "primary" | "secondary";
  class?: string;
}

const { variant, color } = Astro.props;

const withBaseStyles = (classes: string) => {
  const fontColor = {
    primary: "dark:text-gray-300 text-gray-900",
    secondary: "dark:text-white/60 text-black/60",
    default: "",
  }[color || "default"];

  return `${fontColor} ${classes} ${Astro.props?.class || ""}`;
};

type ElementDefinition = { Element: string; classes: string };

const getElementFromMap = (x = "default"): ElementDefinition =>
  ({
    h1: {
      Element: "h1",
      classes: withBaseStyles("text-6xl font-bold"),
    },
    h2: {
      Element: "h2",
      classes: withBaseStyles("text-4xl font-bold"),
    },
    h3: {
      Element: "h3",
      classes: withBaseStyles("text-3xl font-bold"),
    },
    h4: {
      Element: "h4",
      classes: withBaseStyles("text-2xl font-bold"),
    },
    h5: {
      Element: "h5",
      classes: withBaseStyles("text-xl font-bold"),
    },
    h6: {
      Element: "h6",
      classes: withBaseStyles("text-lg font-bold"),
    },
    subtitle1: {
      Element: "h6",
      classes: withBaseStyles("text-lg font-medium"),
    },
    subtitle2: {
      Element: "h6",
      classes: withBaseStyles("text-lg font-medium"),
    },
    body1: {
      Element: "p",
      classes: withBaseStyles("text-base"),
    },
    body2: {
      Element: "p",
      classes: withBaseStyles("text-sm"),
    },
    caption: {
      Element: "p",
      classes: withBaseStyles("text-xs"),
    },
    default: {
      Element: "span",
      classes: withBaseStyles("text-base"),
    },
  }[x] as ElementDefinition);

const { Element, classes } = getElementFromMap(variant) as ElementDefinition;
---

<Element class={classes}><slot /></Element>
